import{_ as i,r as o,o as r,c as l,b as n,d as e,e as a,a as t}from"./app-QhTf4K4s.js";const c="/sas_runes_cli_2.png",d={},p=t('<p><img src="'+c+`" alt="runes_cli"></p><h1 id="developer-guide" tabindex="-1"><a class="header-anchor" href="#developer-guide" aria-hidden="true">#</a> Developer Guide</h1><h2 id="development-setup" tabindex="-1"><a class="header-anchor" href="#development-setup" aria-hidden="true">#</a> Development Setup</h2><h3 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h3><ul><li><strong>Node.js 18+</strong> - Required for TypeScript development</li><li><strong>macOS 10.15+</strong> - Currently macOS only (Windows/Linux coming soon)</li><li><strong>REAPER 6.0+</strong> - The DAW we&#39;re controlling</li><li><strong>Git</strong> - For version control</li></ul><h3 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Clone the repository</span>
<span class="token function">git</span> clone https://github.com/shiehn/reaper-chat.git
<span class="token builtin class-name">cd</span> reaper-chat

<span class="token comment"># Install dependencies</span>
<span class="token function">npm</span> <span class="token function">install</span>

<span class="token comment"># Run in development mode</span>
<span class="token function">npm</span> run start         <span class="token comment"># Standard development mode</span>
<span class="token function">npm</span> run dev:safe      <span class="token comment"># Safe mode with crash protection</span>
<span class="token function">npm</span> run dev:smart     <span class="token comment"># Auto-restarts on crashes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="architecture-overview" tabindex="-1"><a class="header-anchor" href="#architecture-overview" aria-hidden="true">#</a> Architecture Overview</h2><h3 id="project-structure" tabindex="-1"><a class="header-anchor" href="#project-structure" aria-hidden="true">#</a> Project Structure</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>signals-and-sorcery/
├── src/
│   ├── main/              # Electron main process
│   │   ├── index.ts       # App entry point
│   │   ├── mcp-typescript.ts  # MCP server manager
│   │   └── bridge-installer.ts # Auto-installer
│   ├── renderer/          # React UI
│   │   ├── App.tsx        # Main component
│   │   ├── pages/         # UI pages
│   │   └── components/    # React components
│   ├── mcp-server/        # TypeScript MCP
│   │   ├── index.ts       # Server entry
│   │   ├── dsl/           # 93 DSL tools
│   │   └── resources/     # Lua bridges
│   └── layers/            # Experimental architecture
│       ├── intent/        # Intent analysis
│       ├── validation/    # Parameter validation
│       ├── planning/      # Multi-step planning
│       ├── execution/     # Tool execution
│       ├── retry/         # Retry mechanisms
│       └── response/      # Response formatting
├── scripts/              # Build &amp; test scripts
├── docs/                 # Documentation
└── conversation-tracking/ # Analysis data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="key-technologies" tabindex="-1"><a class="header-anchor" href="#key-technologies" aria-hidden="true">#</a> Key Technologies</h3><ul><li><strong>Electron</strong> - Desktop application framework</li><li><strong>React 19</strong> - UI framework</li><li><strong>TypeScript</strong> - Type-safe JavaScript</li><li><strong>MCP</strong> - Model Context Protocol for LLM tools</li><li><strong>Tailwind CSS</strong> - Utility-first CSS</li><li><strong>Zod</strong> - Runtime type validation</li></ul><h2 id="adding-new-dsl-tools" tabindex="-1"><a class="header-anchor" href="#adding-new-dsl-tools" aria-hidden="true">#</a> Adding New DSL Tools</h2><h3 id="⚠️-important-read-first" tabindex="-1"><a class="header-anchor" href="#⚠️-important-read-first" aria-hidden="true">#</a> ⚠️ IMPORTANT: Read First!</h3>`,14),u={href:"https://github.com/shiehn/reaper-chat/blob/main/TOOL_ARCHITECTURE.md",target:"_blank",rel:"noopener noreferrer"},m=t(`<h3 id="tool-structure" tabindex="-1"><a class="header-anchor" href="#tool-structure" aria-hidden="true">#</a> Tool Structure</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/mcp-server/dsl/tracks.ts</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> createTrackTool <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;dsl_create_track&quot;</span><span class="token punctuation">,</span>
  description<span class="token operator">:</span> <span class="token string">&quot;Create a new track in REAPER&quot;</span><span class="token punctuation">,</span>
  parameters<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">optional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Track name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    type<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">enum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;audio&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;midi&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token string">&#39;audio&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    index<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">optional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Insert position&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">execute</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Implementation</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> reaperAPI<span class="token punctuation">.</span><span class="token function">createTrack</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tool-categories" tabindex="-1"><a class="header-anchor" href="#tool-categories" aria-hidden="true">#</a> Tool Categories</h3><p>Tools must be placed in the correct category file:</p><ul><li><code>tracks.ts</code> - Track operations (create, delete, rename)</li><li><code>effects.ts</code> - FX and processing</li><li><code>transport.ts</code> - Playback control</li><li><code>automation.ts</code> - Envelope and automation</li><li><code>navigation.ts</code> - Cursor and selection</li><li><code>mixing.ts</code> - Volume, pan, routing</li><li><code>midi.ts</code> - MIDI operations</li><li><code>generation.ts</code> - Content generation</li></ul><h3 id="adding-a-tool-checklist" tabindex="-1"><a class="header-anchor" href="#adding-a-tool-checklist" aria-hidden="true">#</a> Adding a Tool Checklist</h3><ol><li>✅ Determine the correct category</li><li>✅ Add tool to category file</li><li>✅ Define tool relationships in router</li><li>✅ Update category keywords</li><li>✅ Add corresponding Lua function if needed</li><li>✅ Write unit tests</li><li>✅ Update documentation</li></ol><h2 id="testing" tabindex="-1"><a class="header-anchor" href="#testing" aria-hidden="true">#</a> Testing</h2><h3 id="unit-tests" tabindex="-1"><a class="header-anchor" href="#unit-tests" aria-hidden="true">#</a> Unit Tests</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Run all tests</span>
<span class="token function">npm</span> <span class="token builtin class-name">test</span>

<span class="token comment"># Test specific module</span>
<span class="token function">npm</span> <span class="token builtin class-name">test</span> -- dsl/tracks

<span class="token comment"># Test with coverage</span>
<span class="token function">npm</span> <span class="token builtin class-name">test</span> -- <span class="token parameter variable">--coverage</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="integration-tests" tabindex="-1"><a class="header-anchor" href="#integration-tests" aria-hidden="true">#</a> Integration Tests</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Test with real REAPER instance</span>
<span class="token function">npm</span> run test:integration

<span class="token comment"># Test specific command flow</span>
<span class="token function">node</span> scripts/tests/test-full-stack.js <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="e2e-tests" tabindex="-1"><a class="header-anchor" href="#e2e-tests" aria-hidden="true">#</a> E2E Tests</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Run Playwright tests</span>
<span class="token function">npm</span> run test:e2e

<span class="token comment"># Test layered architecture</span>
<span class="token function">npm</span> run test:e2e:layered

<span class="token comment"># Test backward compatibility</span>
<span class="token function">npm</span> run test:e2e:compat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="debugging" tabindex="-1"><a class="header-anchor" href="#debugging" aria-hidden="true">#</a> Debugging</h2><h3 id="enable-debug-logging" tabindex="-1"><a class="header-anchor" href="#enable-debug-logging" aria-hidden="true">#</a> Enable Debug Logging</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># In .env file</span>
<span class="token assign-left variable">VITE_LOG_LEVEL</span><span class="token operator">=</span>debug
<span class="token assign-left variable">DEBUG_TOOL_SELECTION</span><span class="token operator">=</span>true
<span class="token assign-left variable">ENABLE_CONVERSATION_TRACKING</span><span class="token operator">=</span>true

<span class="token comment"># Or via environment</span>
<span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>* <span class="token function">npm</span> run start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chrome-devtools" tabindex="-1"><a class="header-anchor" href="#chrome-devtools" aria-hidden="true">#</a> Chrome DevTools</h3><ol><li>Open the app</li><li>Press <code>Cmd+Option+I</code> (Mac) or <code>Ctrl+Shift+I</code> (Windows)</li><li>Use Console, Network, and Sources tabs</li></ol><h3 id="reaper-bridge-debugging" tabindex="-1"><a class="header-anchor" href="#reaper-bridge-debugging" aria-hidden="true">#</a> REAPER Bridge Debugging</h3><ol><li>Open REAPER&#39;s ReaScript console</li><li>Look for MCP bridge output</li><li>Check <code>Scripts/mcp_bridge_data/</code> for logs</li></ol><h2 id="building-distribution" tabindex="-1"><a class="header-anchor" href="#building-distribution" aria-hidden="true">#</a> Building &amp; Distribution</h2><h3 id="build-commands" tabindex="-1"><a class="header-anchor" href="#build-commands" aria-hidden="true">#</a> Build Commands</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Build TypeScript</span>
<span class="token function">npm</span> run build

<span class="token comment"># Build for current platform</span>
<span class="token function">npm</span> run dist

<span class="token comment"># Build for specific platforms</span>
<span class="token function">npm</span> run dist:mac
<span class="token function">npm</span> run dist:win
<span class="token function">npm</span> run dist:linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="release-process" tabindex="-1"><a class="header-anchor" href="#release-process" aria-hidden="true">#</a> Release Process</h3><ol><li>Update version in <code>package.json</code></li><li>Run tests: <code>npm test</code></li><li>Build: <code>npm run dist</code></li><li>Test the built app</li><li>Create GitHub release</li><li>Upload artifacts</li></ol><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing" aria-hidden="true">#</a> Contributing</h2><h3 id="code-style" tabindex="-1"><a class="header-anchor" href="#code-style" aria-hidden="true">#</a> Code Style</h3><ul><li>Use TypeScript for type safety</li><li>Follow ESLint rules</li><li>Use Prettier for formatting</li><li>Write tests for new features</li></ul><h3 id="commit-messages" tabindex="-1"><a class="header-anchor" href="#commit-messages" aria-hidden="true">#</a> Commit Messages</h3><p>Follow conventional commits:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>feat: add new DSL tool for track routing
fix: resolve MCP connection timeout
docs: update developer guide
test: add unit tests for effects tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pull-request-process" tabindex="-1"><a class="header-anchor" href="#pull-request-process" aria-hidden="true">#</a> Pull Request Process</h3><ol><li>Fork the repository</li><li>Create feature branch</li><li>Make changes with tests</li><li>Update documentation</li><li>Submit PR with description</li></ol><h2 id="advanced-topics" tabindex="-1"><a class="header-anchor" href="#advanced-topics" aria-hidden="true">#</a> Advanced Topics</h2><h3 id="layered-architecture" tabindex="-1"><a class="header-anchor" href="#layered-architecture" aria-hidden="true">#</a> Layered Architecture</h3><p>Enable experimental features:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/main/config.ts</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  useLayeredArchitecture<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  layers<span class="token operator">:</span> <span class="token punctuation">{</span>
    intent<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    validation<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    planning<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    retry<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    response<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custom-tool-providers" tabindex="-1"><a class="header-anchor" href="#custom-tool-providers" aria-hidden="true">#</a> Custom Tool Providers</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/mcp-server/providers/custom.ts</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CustomToolProvider</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">getTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
      <span class="token comment">// Your custom tools</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="performance-optimization" tabindex="-1"><a class="header-anchor" href="#performance-optimization" aria-hidden="true">#</a> Performance Optimization</h3><ul><li>Use batch operations for multiple tracks</li><li>Cache frequently used data</li><li>Optimize Lua bridge calls</li><li>Monitor with conversation tracking</li></ul><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources" aria-hidden="true">#</a> Resources</h2><h3 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h3>`,44),h={href:"https://github.com/shiehn/reaper-chat",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/shiehn/reaper-chat/blob/main/TOOL_ARCHITECTURE.md",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/shiehn/reaper-chat/blob/main/docs/STATE_VALIDATION.md",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/shiehn/reaper-chat/blob/main/docs/DSL_TOOL_REASCRIPT_MAPPING.md",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"support",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#support","aria-hidden":"true"},"#"),e(" Support")],-1),f={href:"https://github.com/shiehn/reaper-chat/issues",target:"_blank",rel:"noopener noreferrer"},_={href:"https://discord.gg/reaper-chat",target:"_blank",rel:"noopener noreferrer"},x=n("li",null,"Email: support@reaper-chat.com",-1),y=n("h3",{id:"related-projects",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#related-projects","aria-hidden":"true"},"#"),e(" Related Projects")],-1),T={href:"https://github.com/anthropics/mcp",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.reaper.fm/sdk/reascript/reascript.php",target:"_blank",rel:"noopener noreferrer"},E={href:"https://www.electronjs.org/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://react.dev/",target:"_blank",rel:"noopener noreferrer"};function C(S,A){const s=o("ExternalLinkIcon");return r(),l("div",null,[p,n("p",null,[e("Before adding tools, "),n("strong",null,[e("you MUST read "),n("a",u,[e("TOOL_ARCHITECTURE.md"),a(s)])]),e(". The smart router requires careful tool placement to function correctly.")]),m,n("ul",null,[n("li",null,[n("a",h,[e("Main README"),a(s)])]),n("li",null,[n("a",v,[e("Tool Architecture"),a(s)])]),n("li",null,[n("a",b,[e("State Validation"),a(s)])]),n("li",null,[n("a",k,[e("DSL Tool Mapping"),a(s)])])]),g,n("ul",null,[n("li",null,[n("a",f,[e("GitHub Issues"),a(s)])]),n("li",null,[n("a",_,[e("Discord Community"),a(s)])]),x]),y,n("ul",null,[n("li",null,[n("a",T,[e("Model Context Protocol"),a(s)])]),n("li",null,[n("a",w,[e("REAPER ReaScript"),a(s)])]),n("li",null,[n("a",E,[e("Electron"),a(s)])]),n("li",null,[n("a",R,[e("React"),a(s)])])])])}const I=i(d,[["render",C],["__file","index.html.vue"]]);export{I as default};

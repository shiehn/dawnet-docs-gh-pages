import{_ as n,r as i,o as a,c as l,b as e,d as t,e as r,a as s}from"./app-5cRxTRzJ.js";const d={},c=e("h2",{id:"how-do-i-try-it",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-do-i-try-it","aria-hidden":"true"},"#"),t(" How do I try it?")],-1),h=e("li",null,"Download the plugin installer. Run it.",-1),u={href:"/remote-compute/",target:"_blank",rel:"noopener noreferrer"},p=s('<li>Open <a href="Ableton">https://www.ableton.com/</a>. Find the plugin in Ableton at <code>Plugin-Ins -&gt; SignalsAndSorcery -&gt; DAWNet.vst3</code>. (If you don&#39;t see the plugin go to <code>options -&gt; preferences -&gt; &quot;Use VST3 plugin system folder&quot; -&gt; rescan</code>)</li><li>Generate &amp; Copy a &quot;token&quot; from the DAWNet VST interface (top bar).</li><li>Paste the &quot;token&quot; into Colab. Find the token variable (called something similar to <code>dawnet_token</code>). Set the value.</li><li>At this point the Plugin and the Colab server should have <code>found</code> each other via the underlying web-socket server.</li><li>If a Python function was registered it will be translated into a web form/interface in the plugin. Files, e.x Audio &amp; MIDI files can be dragged from the host DAW&#39;s timeline into the plugin. The plugin will handle transferring files and other input params over the network to the remote compute.</li>',5);function m(f,g){const o=i("ExternalLinkIcon");return a(),l("div",null,[c,e("ol",null,[h,e("li",null,[t("Choose a community "),e("a",u,[t("remote"),r(o)]),t(", AKA Google Colab notebook. Load it in Colab.")]),p])])}const b=n(d,[["render",m],["__file","index.html.vue"]]);export{b as default};
